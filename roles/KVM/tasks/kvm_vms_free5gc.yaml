- name: Configurando os templates das vms Free5GC.
  blockinfile:
    path: "/tmp/{{ item.name }}.xml"
    block: |
        <domain type='kvm'>
          <os>
            <type>hvm</type>
            <boot dev='hd'/>
          </os>
          <features>
            <acpi/>
            <apic/>
            <pae/>
          </features>
          <devices>
            <interface type='network'>
              <source network='ifpb'/>
              <model type='virtio'/>
            </interface>
            <interface type='network'>
              <mac address='{{ item.mac }}'/>
              <source network='ifpb-s2'/>
              <model type='virtio'/>
            </interface>
            <serial type='pty'>
              <source path='/dev/pts/3'/>
              <target port='0'/>
            </serial>
            <graphics type='vnc' autoport='yes' listen='127.0.0.1'>
              <listen type='address' address='127.0.0.1'/>
            </graphics>
            <graphics type='spice' autoport='yes' listen='127.0.0.1'>
              <listen type='address' address='127.0.0.1'/>
            </graphics>
            <video>
              <model type='qxl'/>
            </video>
            <channel type='unix'>
              <target type='virtio' name='org.qemu.guest_agent.0'/>
            </channel>
          </devices>
        </domain>
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    create: True
  loop: "{{ vms_free5gc }}"

- name: Copiando arquivos das configurações de rede das vms Free5GC.
  ansible.builtin.copy:
    src: "files/{{ item.name }}.cfg"
    dest: "/tmp"
  loop: "{{ vms_free5gc }}"

- name: Criando as VMs do Free5GC.
  ansible.builtin.shell: /usr/bin/uvt-kvm create "{{ item.name }}" --memory "{{ item.memory }}" --cpu "{{ item.cpu }}" --disk "{{ item.disk }}" --template /tmp/{{ item.name }}.xml --user-data "/tmp/{{ item.name }}.cfg" #--no-start
  loop: "{{ vms_free5gc }}"